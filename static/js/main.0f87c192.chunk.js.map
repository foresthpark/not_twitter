{"version":3,"sources":["firebaseConfig.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/AppRouter.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","firebaseInstance","firestoreDb","firebaseStorage","AuthForm","useState","error","setError","email","password","loginInput","setLoginInput","newAccount","setNewAccount","handleInputChange","event","target","name","value","onSubmit","a","console","log","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","onChange","required","onClick","prev","Auth","onGithubClick","signInWithPopup","auth","GithubAuthProvider","onGoogleClick","GoogleAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObject","isOwner","text","newNweet","setNewNweet","isEditing","setIsEditing","setSelectedImage","toggleIsEditing","handleDeleteClick","window","confirm","doc","id","delete","refFromURL","imgUrl","submitNewNweet","update","autoFocus","content","src","alt","class","faTrash","faPencilAlt","NweetFactory","userObject","nweet","setNweet","fileString","setFileString","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","photoFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweetsCollection","setNweetsCollection","useEffect","orderBy","onSnapshot","snapshot","nweetsArray","docs","map","data","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","myNweets","setMyNweets","newDisplayName","setNewDisplayName","history","useHistory","getMyNweets","where","get","myNweetsFromFirestore","myNweetsArray","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObject","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f87c192.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n// // Initialize Firebase\n// firebase.analytics();\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const authService = firebase.auth();\nexport const firebaseInstance = firebase;\nexport const firestoreDb = firebase.firestore();\nexport const firebaseStorage = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"firebaseConfig\";\n\nconst AuthForm = () => {\n  const [error, setError] = useState(\"\");\n  const [loginInput, setLoginInput] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [newAccount, setNewAccount] = useState(true);\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  const handleInputChange = (event) => {\n    setLoginInput({\n      ...loginInput,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const onSubmit = async (event) => {\n    console.log(loginInput);\n    event.preventDefault();\n\n    try {\n      let data;\n      if (newAccount) {\n        // create new account\n        data = await authService.createUserWithEmailAndPassword(\n          loginInput.email,\n          loginInput.password\n        );\n      } else {\n        // Log in\n        data = await authService.signInWithEmailAndPassword(\n          loginInput.email,\n          loginInput.password\n        );\n      }\n    } catch (err) {\n      console.log(err.message);\n      setError(err.message);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={loginInput.email}\n          onChange={handleInputChange}\n          required\n          className=\"authInput\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={loginInput.password}\n          onChange={handleInputChange}\n          required\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <button onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </button>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { authService, firebaseInstance } from \"firebaseConfig\";\nimport React from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onGithubClick = async () => {\n    await authService.signInWithPopup(\n      new firebaseInstance.auth.GithubAuthProvider()\n    );\n  };\n\n  const onGoogleClick = async () => {\n    await authService.signInWithPopup(\n      new firebaseInstance.auth.GoogleAuthProvider()\n    );\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n\n      <div className=\"authBtns\">\n        <button onClick={onGoogleClick} name=\"google\" className=\"authBtn\">\n          Log in with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onGithubClick} name=\"github\" className=\"authBtn\">\n          Log in with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { firebaseStorage, firestoreDb } from \"firebaseConfig\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Popover } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nconst Nweet = ({ nweetObject, isOwner }) => {\n  const [newNweet, setNewNweet] = useState(nweetObject.text);\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const toggleIsEditing = () => setIsEditing((prev) => !prev);\n\n  const handleDeleteClick = async () => {\n    const confirmClick = window.confirm(\n      \"Are you sure you want to delete this?\"\n    );\n    if (confirmClick) {\n      await firestoreDb.doc(`nweets/${nweetObject.id}`).delete();\n      await firebaseStorage.refFromURL(nweetObject.imgUrl).delete();\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNewNweet(value);\n  };\n\n  const submitNewNweet = async (event) => {\n    event.preventDefault();\n    console.log(nweetObject, newNweet);\n    await firestoreDb.doc(`nweets/${nweetObject.id}`).update({\n      text: newNweet,\n    });\n\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {isEditing ? (\n        <>\n          <form onSubmit={submitNewNweet} className=\"container nweetEdit\">\n            <input\n              autoFocus\n              type=\"text\"\n              className=\"formInput\"\n              value={newNweet}\n              required\n              onChange={onChange}\n            />\n            <input type=\"submit\" value=\"Update\" className=\"formBtn\" />\n          </form>\n          <button onClick={toggleIsEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObject.text}</h4>\n          {nweetObject.imgUrl && (\n            <>\n              <Popover content={<img src={nweetObject.imgUrl} alt=\"\" />}>\n                <img\n                  // className=\"backdrop\"\n                  onClick={() => setSelectedImage(nweetObject.imgUrl)}\n                  src={nweetObject.imgUrl}\n                  alt=\"\"\n                />\n              </Popover>\n            </>\n          )}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={handleDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleIsEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { firebaseStorage, firestoreDb } from \"firebaseConfig\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObject }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [fileString, setFileString] = useState(null);\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let imgUrl = null;\n    if (fileString !== null) {\n      const fileRef = firebaseStorage\n        .ref()\n        .child(`${userObject.uid}/${uuidv4()}`);\n\n      const response = await fileRef.putString(fileString, \"data_url\");\n      imgUrl = await response.ref.getDownloadURL();\n      setFileString(null);\n    }\n\n    setNweet(\"\");\n\n    const newNweet = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObject.uid,\n      imgUrl,\n    };\n    await firestoreDb.collection(\"nweets\").add(newNweet);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n\n    const photoFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setFileString(result);\n    };\n    reader.readAsDataURL(photoFile);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onClearFileString = () => setFileString(null);\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      <input type=\"submit\" value=\"Nweet It\" />\n      {fileString && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={fileString}\n            style={{\n              backgroundImage: fileString,\n            }}\n            alt=\"\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearFileString}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { firestoreDb } from \"firebaseConfig\";\nimport React, { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObject }) => {\n  const [nweetsCollection, setNweetsCollection] = useState([]);\n\n  useEffect(() => {\n    firestoreDb\n      .collection(\"nweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const nweetsArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n\n        setNweetsCollection(nweetsArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObject={userObject} />\n      <div style={{ marginTop: 30 }}>\n        {nweetsCollection.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObject={nweet}\n            isOwner={nweet.creatorId === userObject.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObject }) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObject.displayName\n                ? `${userObject.displayName}'s Profile`\n                : \"Profile\"}\n            </span>\n          </Link>{\" \"}\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import Nweet from \"components/Nweet\";\nimport { authService, firestoreDb } from \"firebaseConfig\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObject, refreshUser }) => {\n  const [myNweets, setMyNweets] = useState(null);\n  const [newDisplayName, setNewDisplayName] = useState(userObject.displayName);\n\n  const history = useHistory();\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n    refreshUser();\n  };\n\n  const getMyNweets = async () => {\n    const myNweetsFromFirestore = await firestoreDb\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObject.uid)\n      .orderBy(\"createdAt\", \"desc\")\n      .get();\n\n    const myNweetsArray = myNweetsFromFirestore.docs.map((doc) => {\n      return doc.data();\n    });\n\n    setMyNweets(myNweetsArray);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObject.displayName !== newDisplayName) {\n      await userObject.updateProfile({ displayName: newDisplayName });\n    }\n\n    refreshUser();\n  };\n\n  const onDisplayNameChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          autoFocus\n          className=\"formInput\"\n          type=\"text\"\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          onChange={onDisplayNameChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n      {myNweets &&\n        myNweets.map((nweet) => {\n          return (\n            <Nweet\n              key={`${nweet.createdAt}`}\n              nweetObject={nweet}\n              isOwner={userObject.uid === nweet.creatorId}\n            />\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ userObject, isLoggedIn, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObject={userObject} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObject={userObject} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObject={userObject} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/AppRouter\";\nimport { authService } from \"firebaseConfig\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObject, setUserObject] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObject({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObject({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          userObject={userObject}\n          isLoggedIn={isLoggedIn}\n        />\n      ) : (\n        \"\"\n      )}\n      {/* <footer style={{ textAlign: \"center\" }}>\n        &copy; Not Twitter {new Date().getFullYear()}\n      </footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}